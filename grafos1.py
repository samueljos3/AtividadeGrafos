# -*- coding: utf-8 -*-
"""grafos1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CAfFU6JAjaaFDvP32w-_jUekmCU4kaco
"""

from grafos import Graph

def load_graph_from_file(file_name):
    # Abrir o arquivo para leitura
    with open(file_name, 'r') as f:
        num_vertices = int(f.readline())

        graph = Graph(num_vertices)

        current_line = 0

        for line in f:
            line = line.strip()

            numbers = line.split("\t")

            current_column = 0

            for num in numbers:
                if current_column == graph.num_vertices:
                    break

                graph.matrix[current_line][current_column] = int(num)

                if graph.matrix[current_line][current_column] > 0:
                    graph.list[current_line].append(current_column)

                current_column += 1

            current_line += 1

    return graph

continue_execution = True

while continue_execution:
    # Solicitar ao usuário o caminho do arquivo
    file_path = input("Digite o caminho do arquivo: ")

    graph = load_graph_from_file(file_path)

    graph.print()

    start_vertex = int(input("Digite o vértice inicial: "))

    end_vertex = int(input("Digite o vértice final para encontrar o caminho: "))

    distance, predecessor = graph.bfs(start_vertex)

    dfs_result = graph.dfs(start_vertex)

    path = graph.path_bfs(start_vertex, end_vertex, predecessor)

    # Exibir resultados
    print("Distância (BFS):", distance)
    print("Antecessores (BFS):", predecessor)
    print("DFS:", dfs_result)
    print("Caminho encontrado (BFS):", path)

    user_input = input("Deseja continuar? (s/n) ")

    if user_input != "s":
        continue_execution = False